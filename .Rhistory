fdr = function(X, p, beta, snr, EV, LOOPS = 1000){
n.selected = false.selections = correct.selections.prop = method = pi = c()
for (i in 1:LOOPS){
signal = sqrt(mean((as.matrix(X) %*% as.matrix(beta))^2))
sigma = as.numeric(signal/sqrt(snr))
# Compute Y with SNR
Y = as.matrix(X)%*%as.matrix(beta) + rnorm(nrow(X), 0, sd = sigma)
# Stability Selection
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
# Shuffle data
idx = sample(1:nrow(X), replace = F)
rX = X[idx,]
idxPushed = c(tail(idx, 1), head(idx, -1))
rY = Y[idxPushed] |> as.matrix(ncol = 1)
# Exclusion Probability Threshold
sMix = stabs::stabsel(x = rX, y = rY, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
sMix_prob = sort(sMix$max, decreasing = T)
mix_exclusion = quantile(sMix_prob, 0.95)
EATS =  convert(s)[1:(length(convert(s)))][convert(s)[1:(length(convert(s)))] >= 100*mix_exclusion]
if (length(EATS) == 2){EATS = c(EATS, EATS[1])}
EATSix = EATS |> getR()
pi.hat = EATS[EATSix]/100
if (pi.hat <= 0.5){
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = EV, cutoff = 0.501,
sampling.type = "MB")
}else{
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = EV, cutoff = pi.hat,
sampling.type = "MB")
}
n.selected[i] = length(s$selected)
false.selections[i] = sum(!(s$selected %in% 1:active))
correct.selections.prop[i] = sum((s$selected %in% 1:active))/active
pi[i] = pi.hat
method[i] = ifelse(pi.hat < 0.5, "CPSS", "SS")
if (i %% 10 == 0){print(i)}
}
out = data.frame(n.selected,false.selections, correct.selections.prop, method, pi, EV, snr)
}
library(tidyverse)
library(latex2exp)
load("S1final.Rdata")
load("S2final.Rdata")
load("S3final.Rdata")
load("S4final.Rdata")
filtered = c("ATS", "Exclusion ATS",
"Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "Knockoff", "SCAD")
repeats = 1000
c11hard = combine(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22hard = combine(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 2, filtered = filtered) |> makeCluster()
c33hard = combine(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 3, filtered = filtered) |> makeCluster()
c44hard = combine(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 4, filtered = filtered) |> makeCluster()
c1hard = rbind(c11hard,c22hard) |> totplotnoaxis()
c2hard = rbind(c33hard,c44hard) |> totplot()
library(patchwork)
c1hard/c2hard
combineN = function(a,b,c = NULL,d, ref,filtered = NULL, ribo = F){
if (is.null(filtered) == T){
filtered = c("ATS", "Exclusion ATS", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 20")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
if (ribo == F){
r = rbind(a |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("10", "5", "3", "1"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}else if (ribo == T){
r = rbind(a |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1]),
b |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2]))
return(data.frame(r))
}
}
totplotN = function(TOT, lim = max(TOT$NN)){
str = unique(TOT$Dimension) |> as.character() |> strsplit(split = "|")
active = numeric(length(str))
for (i in 1:length(str)){
if (str[[i]] |> last() == 0){
active[i] = paste(str[[i]] |> nth(-2), str[[i]] |> last(), sep = "") |> as.numeric()
}else{
active[i] = as.numeric(str[[i]] |> last())
}
}
# just a trick to get it into a nice dataframe. dont actulaly care about mean
TOTdummy = TOT |> group_by(Dimension) |> summarise(active = mean(NN))
TOTdummy$active = active
# TOT = TOT[!TOT$Method %in% c("LASSO 1SE", "LASSO MIN"),]
ggplot(TOT,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
geom_hline(data = TOTdummy, aes(yintercept = active), linetype = "dashed", linewidth = 0.5) +
coord_cartesian(ylim = c(0, lim)) +
# facet_wrap(~Dimension, ncol = 4) +
theme_few_grid(base_size = 20) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
totplotNnoaxis = function(TOT, lim = max(TOT$NN)){
str = unique(TOT$Dimension) |> as.character() |> strsplit(split = "|")
active = numeric(length(str))
for (i in 1:length(str)){
if (str[[i]] |> last() == 0){
active[i] = paste(str[[i]] |> nth(-2), str[[i]] |> last(), sep = "") |> as.numeric()
}else{
active[i] = as.numeric(str[[i]] |> last())
}
}
# just a trick to get it into a nice dataframe. dont actulaly care about mean
TOTdummy = TOT |> group_by(Dimension) |> summarise(active = mean(NN))
TOTdummy$active = active
# TOT = TOT[!TOT$Method %in% c("LASSO 1SE", "LASSO MIN"),]
ggplot(TOT,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
geom_hline(data = TOTdummy, aes(yintercept = active), linetype = "dashed", linewidth = 0.5) +
coord_cartesian(ylim = c(0, lim)) +
# facet_wrap(~Dimension, ncol = 4) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
c11Nhard = combineN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Nhard = combineN(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 2, filtered = filtered) |> makeCluster()
c33Nhard = combineN(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 3, filtered = filtered) |> makeCluster()
c44Nhard = combineN(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 4, filtered = filtered) |> makeCluster()
combineN = function(a,b,c = NULL,d, ref,filtered = NULL, ribo = F){
if (is.null(filtered) == T){
filtered = c("ATS", "Exclusion ATS", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 20")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
if (ribo == F){
r = rbind(a |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("10", "5", "3", "1"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}else if (ribo == T){
r = rbind(a |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1]),
b |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2]))
return(data.frame(r))
}
}
c11Nhard = combineN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Nhard = combineN(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 2, filtered = filtered) |> makeCluster()
c33Nhard = combineN(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 3, filtered = filtered) |> makeCluster()
c44Nhard = combineN(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 4, filtered = filtered) |> makeCluster()
c1nhard = rbind(c11Nhard,c22Nhard) |> totplot2Nnoaxis(lim = 30)
c2nhard = rbind(c33Nhard,c44Nhard) |> totplot2N(lim = 60)
c1nhard = rbind(c11Nhard,c22Nhard) |> totplotNnoaxis(lim = 30)
c2nhard = rbind(c33Nhard,c44Nhard) |> totplotN(lim = 60)
library(patchwork)
c1nhard/c2nhard
c1nhard = rbind(c11Nhard,c22Nhard) |> totplotNnoaxis(lim = 40)
c1nhard/c2nhard
combineRecall = function(a,b,c = NULL,d, ref,filtered = NULL, ribo = F){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 20")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
if (ribo == F){
r = rbind(a |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("10", "5", "3", "1"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}else if (ribo == T){
r = rbind(a |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1]),
b |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2]))
return(data.frame(r))
}
}
totplotRecall = function(TOT){
ggplot(TOT,aes(x = Method, y = Recall, fill = Method)) + geom_boxplot() +
facet_grid(Dimension ~SNR, labeller = label_parsed, scales = "free_y") +
ylab("Recall") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
# Recall
c11Recallhard = combineRecall(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Recallhard = combineRecall(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Recallhard = combineRecall(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
c44Recallhard = combineRecall(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 4, filtered = filtered) |> makeCluster()
combinePrecision = function(a,b,c = NULL,d, ref,filtered = NULL, ribo = F){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 20")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
if (ribo == F){
r = rbind(a |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("10", "5", "3", "1"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}else if (ribo == T){
r = rbind(a |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1]),
b |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2]))
return(data.frame(r))
}
}
combinePrecision = function(a,b,c = NULL,d, ref,filtered = NULL, ribo = F){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 20")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
if (ribo == F){
r = rbind(a |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("10", "5", "3", "1"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}else if (ribo == T){
r = rbind(a |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1]),
b |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2]))
return(data.frame(r))
}
}
totplotPrecision = function(TOT){
ggplot(TOT,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot() +
facet_wrap(Dimension ~SNR, labeller = label_parsed, ncol = 4) +
ylab("Recall") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
#Precision
c11Precisionhard = combinePrecision(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Precisionhard = combinePrecision(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Precisionhard = combinePrecision(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
c44Precisionhard = combinePrecision(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 4, filtered = filtered) |> makeCluster()
phard1 = prplot1(c11Recallhard, c11Precisionhard, c22Recallhard, c22Precisionhard)
prplot1 = function(recall, precision, recall1, precision1){
r = ggplot(recall, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
p = ggplot(precision, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") + theme_few_grid(base_size = 20) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_blank(),
strip.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
rr = ggplot(recall1, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
pp = ggplot(precision1, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
library(patchwork)
r/p/rr/pp
}
phard1 = prplot1(c11Recallhard, c11Precisionhard, c22Recallhard, c22Precisionhard)
phard2 = prplot1(c33Recallhard, c33Precisionhard, c44Recallhard, c44Precisionhard)
phard1/phard2
phard1
phard2
exclusion = function(x){
x[11,] |> unlist() |> as.vector()
}
s1.10e = exclusion(S1.10hard)
S1.10hard[10,]
exclusion = function(x){
x[10,] |> unlist() |> as.vector()
}
exclusion = function(x){
x[10,] |> unlist() |> as.vector()
}
s1.10e = exclusion(S1.10hard)
s1.5e =  exclusion(S1.5hard)
s1.3e =  exclusion(S1.3hard)
s1.1e =  exclusion(S1.1hard)
s2.10e = exclusion(S2.10hard)
s2.5e =  exclusion(S2.5hard)
s2.3e =  exclusion(S2.3hard)
s2.1e =  exclusion(S2.1hard)
s3.10e =  exclusion(S3.10hard)
s3.5e =   exclusion(S3.5hard)
s3.3e =   exclusion(S3.3hard)
s3.1e =   exclusion(S3.1hard)
s4.10e = exclusion(S4.10hard)
s4.5e =  exclusion(S4.5hard)
s4.3e =  exclusion(S4.3hard)
s4.1e =  exclusion(S4.1hard)
# 1 4 2 3 for some reason
excl = data.frame("Eta" =
c(s1.10e, s1.5e, s1.3e, s1.1e,
s4.10e, s4.5e, s4.3e, s4.1e,
s2.10e, s2.5e, s2.3e, s2.1e,
s3.10e, s3.5e, s3.3e, s3.1e),
"Setting" = c(rep("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",4000),
rep("(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",4000),
rep("(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",4000),
rep("(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20",4000)),
"SNR" = rep(c(rep(10, 1000), rep(5,1000), rep(3, 1000), rep(1,1000)), 4)
) |> mutate(SNR = factor(SNR))
ggplot(excl, aes(x = SNR, y = Eta)) + geom_boxplot(alpha = 0.65) +
facet_wrap(~Setting, labeller = label_parsed, ncol = 4) +
theme_few_grid(base_size = 20) +
ylab(TeX("Exclusion Probability Threshold $\\eta$")) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
theme(legend.position = "none")
# scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
s1.10e = exclusion(S1.10hard)
s1.5e =  exclusion(S1.5hard)
s1.3e =  exclusion(S1.3hard)
s1.1e =  exclusion(S1.1hard)
s2.10e = exclusion(S2.10hard)
s2.5e =  exclusion(S2.5hard)
s2.3e =  exclusion(S2.3hard)
s2.1e =  exclusion(S2.1hard)
s3.10e =  exclusion(S3.10hard)
s3.5e =   exclusion(S3.5hard)
s3.3e =   exclusion(S3.3hard)
s3.1e =   exclusion(S3.1hard)
s4.10e = exclusion(S4.10hard)
s4.5e =  exclusion(S4.5hard)
s4.3e =  exclusion(S4.3hard)
s4.1e =  exclusion(S4.1hard)
excl = data.frame("Eta" =
c(s1.10e, s1.5e, s1.3e, s1.1e,
s2.10e, s2.5e, s2.3e, s2.1e,
s3.10e, s3.5e, s3.3e, s3.1e,
s4.10e, s4.5e, s4.3e, s4.1e),
"Setting" = c(rep("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",4000),
rep("(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",4000),
rep("(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",4000),
rep("(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20",4000)),
"SNR" = rep(c(rep(10, 1000), rep(5,1000), rep(3, 1000), rep(1,1000)), 4)
) |> mutate(SNR = factor(SNR))
ggplot(excl, aes(x = SNR, y = Eta)) + geom_boxplot(alpha = 0.65) +
facet_wrap(~Setting, labeller = label_parsed, ncol = 4) +
theme_few_grid(base_size = 20) +
ylab(TeX("Exclusion Probability Threshold $\\eta$")) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
theme(legend.position = "none")
paste(Sys.date, "222")
paste(Sys.date(), "222")
sys.date()
sys.time()
?Sys.date()
??Sys.Date
paste(Sys.time, "222")
Sys.Date()
paste(Sys.Date, "222")
paste0(Sys.Date, "222")
paste0(Sys.Date(), "222")
paste(Sys.Date(), "222")
paste0(Sys.Date(), "-")
paste0(Sys.Date(), "_")
a = 2
save(a, file = paste0(Sys.Date(), "a"))
save(a, file = paste0(Sys.Date(), "a.RData"))
setwd("~/Library/CloudStorage/OneDrive-Personal/PhD/2024/Stability/Automatic Threshold Selection")

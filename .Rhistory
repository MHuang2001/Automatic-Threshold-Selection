pred = makePred(q_shuffle_selected, X,p)
q_shuffle_acc = acc(pred, true, p)
# knockoff https://web.stanford.edu/group/candes/knockoffs/software/knockoffs/tutorial-1-r.html
# default FDR = 0.1
# Equi-correlated knockoffs (fast approximation for knocokff)
if (approx == T){
gaussian_knockoffs = function(X) create.second_order(X, method='equi', shrink=T)
kf = knockoff::knockoff.filter(X, Y, knockoffs = gaussian_knockoffs)
}else{
kf = knockoff::knockoff.filter(X, Y)
}
ko_selected = names(kf$selected)
pred = makePred(ko_selected, X, p)
ko_acc = acc(pred, true, p)
# lasso
l = cv.glmnet(X, Y)
c1se = which(coef(l, lambda = l$lambda.1se)[-1] != 0)
c1se_selected = colnames(X)[c1se]
pred = makePred(c1se_selected, X, p)
l1se_acc = acc(pred, true, p)
cmin = which(coef(l, lambda = l$lambda.min)[-1] != 0)
cmin_selected = colnames(X)[cmin]
pred = makePred(cmin_selected, X, p)
lmin_acc = acc(pred, true, p)
# SCAD
nr = cv.ncvreg(X,Y, penalty = "SCAD")
nrcoef = which(coef(nr, lambda = nr$lambda.min)[-1] != 0)
nr_selected = colnames(X)[nrcoef]
pred = makePred(nr_selected, X, p)
scad_acc = acc(pred, true, p)
print("WOW Vitamin B!")
list("0.75" = q_static_acc,
"0.60" = q_60_acc,
"0.90" = q_90_acc,
"All" = q_acc,
"Quarter Shuffle 95%" =  q_quarter_shuffle_acc,
"Shuffle 95%" = q_shuffle_acc,
"LASSO 1SE" = l1se_acc,
"LASSO MIN" = lmin_acc,
"Knockoff" = ko_acc,
"SCAD" = scad_acc,
"Adaptive Exclusion Probability" = mix_exclusion)
}
cleanRecallNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("Recall" = c(extractRecall(z0.75),
extractRecall(z0.60),
extractRecall(z0.90),
extractRecall(ats),
extractRecall(eats),
extractRecall(lasso_1se),
extractRecall(lasso_min),
extractRecall(ko),
extractRecall(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
cleanPrecisionNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("Precision" = c(extractPrecision(z0.75),
extractPrecision(z0.60),
extractPrecision(z0.90),
extractPrecision(ats),
extractPrecision(eats),
extractPrecision(lasso_1se),
extractPrecision(lasso_min),
extractPrecision(ko),
extractPrecision(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
prplot = function(recall, precision){
r = ggplot(recall, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_wrap(Dimension~SNR, labeller = label_parsed, ncol = 4) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
p = ggplot(precision, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_wrap(Dimension~SNR, labeller = label_parsed, ncol = 4) +
ylab("Precision") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
library(patchwork)
r / p
}
plotRibo = function(cleandata, metric){
colnames(cleandata) = c("Metric", colnames(cleandata)[2:ncol(cleandata)])
cleandata |> makeCluster() |> dplyr::filter(Method != "LASSO MIN") |>
ggplot(aes(x = Method, y = Metric, fill = Method)) +
geom_boxplot(alpha = 0.65) + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
ylab(metric) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
prplot1 = function(recall, precision, recall1, precision1){
r = ggplot(recall, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
p = ggplot(precision, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") + theme_few_grid(base_size = 20) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_blank(),
strip.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
rr = ggplot(recall1, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
pp = ggplot(precision1, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
library(patchwork)
r/p/rr/pp
}
prplot1noaxis = function(recall, precision, recall1, precision1){
r = ggplot(recall, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_wrap(Dimension~SNR, labeller = label_parsed, ncol = 4) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
p = ggplot(precision, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_wrap(Dimension~SNR, labeller = label_parsed, ncol = 4) +
ylab("Precision") + theme_few_grid(base_size = 20) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_blank(),
strip.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
rr = ggplot(recall1, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_wrap(Dimension~SNR, labeller = label_parsed, ncol = 4) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
pp = ggplot(precision1, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_wrap(Dimension~SNR, labeller = label_parsed, ncol = 4) +
ylab("Precision") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
library(patchwork)
r/p/rr/pp
}
prplot2 = function(recall, precision){
library(patchwork)
r / p
}
qlocDiabetes = function(d, true, p,  snr = 10){
# if something goes wrong with the resultscomparison page get rid of as.matrix.
signal = sqrt(mean((as.matrix(d$X) %*% as.matrix(d$beta))^2))
sigma = as.numeric(signal/sqrt(snr))
d$Y = as.matrix(d$X)%*%as.matrix(d$beta) + rnorm(nrow(d$X), 0, sd = sigma) # sigma for SNR
s = stabs::stabsel(x = d$X, y = d$Y, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
# mixed Y for adaptive again
idx = sample(1:nrow(d$X), replace = F)
rX = d$X[idx,]
idxPushed = c(tail(idx, 1), head(idx, -1))
rY = d$Y[idxPushed] |> as.matrix(ncol = 1)
sMix = stabs::stabsel(x = rX, y = rY, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
sMix_prob = sort(sMix$phat[,ncol(sMix$phat)], decreasing = T)
mix_exclusion = quantile(sMix_prob, 0.95)
# 0.6
idx_chosen = sort(s$phat[,ncol(s$phat)], decreasing = T) >= 0.6
q_static_selected = names(sort(s$phat[,ncol(s$phat)], decreasing = T))[idx_chosen]
pred = makePred(q_static_selected, d$X,p)
q_60_acc = acc(pred, true, p)
# 0.75
idx_chosen = sort(s$phat[,ncol(s$phat)], decreasing = T) >= 0.75
q_static_selected = names(sort(s$phat[,ncol(s$phat)], decreasing = T))[idx_chosen]
pred = makePred(q_static_selected, d$X,p)
q_static_acc = acc(pred, true, p)
# 0.9
idx_chosen = sort(s$phat[,ncol(s$phat)], decreasing = T) >= 0.9
q_static_selected = names(sort(s$phat[,ncol(s$phat)], decreasing = T))[idx_chosen]
pred = makePred(q_static_selected, d$X,p)
q_90_acc = acc(pred, true, p)
# number of variables selected
q = getR(convert(s))
# pi
q_val = (sort(s$phat[,ncol(s$phat)], decreasing = T)[q]) |> as.vector()
# names of selected variables
q_selected = sort(s$phat[,ncol(s$phat)], decreasing = T)[1:q] |> names()
pred = makePred(q_selected, d$X,p)
q_acc = acc(pred, true, p)
# shuffled Y
q_quart_shuffle =  convert(s)[1:(length(convert(s))/4)][convert(s)[1:(length(convert(s))/4)] >= mix_exclusion]
if (length(q_quart_shuffle) == 2){ q_quart_shuffle = c(q_quart_shuffle, q_quart_shuffle[2])}
q_quart_shuffle = q_quart_shuffle |> getR()
if (q_quart_shuffle[1] == 0) {
q_quart_shuffle_selected = character(0)
}else{
q_quart_shuffle_selected = sort(s$phat[,ncol(s$phat)], decreasing = T)[1:q_quart_shuffle] |> names()
}
pred = makePred(q_quart_shuffle_selected, d$X,p)
q_quarter_shuffle_acc = acc(pred, true, p)
# knockoff https://web.stanford.edu/group/candes/knockoffs/software/knockoffs/tutorial-1-r.html
# default FDR = 0.1
kf = knockoff::knockoff.filter(d$X, as.matrix(d$Y))
ko_selected = names(kf$selected)
pred = makePred(ko_selected, d$X, p)
ko_acc = acc(pred, true, p)
# lasso
l = cv.glmnet(d$X, d$Y)
c1se = which(coef(l, lambda = l$lambda.1se)[-1] != 0)
c1se_selected = colnames(d$X)[c1se]
pred = makePred(c1se_selected, d$X, p)
l1se_acc = acc(pred, true, p)
cmin = which(coef(l, lambda = l$lambda.min)[-1] != 0)
cmin_selected = colnames(d$X)[cmin]
pred = makePred(cmin_selected, d$X, p)
lmin_acc = acc(pred, true, p)
# SCAD
nr = cv.ncvreg(d$X,d$Y, penalty = "SCAD",max.iter = 50000)
nrcoef = which(coef(nr, lambda = nr$lambda.min)[-1] != 0)
nr_selected = colnames(d$X)[nrcoef]
pred = makePred(nr_selected, d$X, p)
scad_acc = acc(pred, true, p)
print("WOW!")
list("0.75" = q_static_acc,
"0.60" = q_60_acc,
"0.90" = q_90_acc,
"All" = q_acc,
"Quarter Shuffle 95%" =  q_quarter_shuffle_acc,
"LASSO 1SE" = l1se_acc,
"LASSO MIN" = lmin_acc,
"Knockoff" = ko_acc,
"SCAD" = scad_acc,
"Adaptive Exclusion Probability" = mix_exclusion)
}
IIIcombine = function(a,b,c,d = NULL,SNR, ribo = F, filtered = NULL, repeats = 1000){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 100, p = 200, active = 20",
"n = 200, p = 200, active = 20",
"n = 400, p = 200, active = 20",
"n = 800, p = 200, active = 20")
labels  = c("n==100*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"n==400*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"n==800*`,`~p==200*`,`~`|`*beta[S]*`|`==20")
r = rbind(a |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[1]),
b |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[2]),
c |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[3]),
d |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[4]))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |>
mutate(Dimension = factor(Dimension, labels = labels),
SNR = factor(SNR))
return(r)
}
plotIII = function(TOT){
ggplot(TOT,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(~Dimension, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x=element_blank()) +
xlab(element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
IVcombine = function(a,b,c,d = NULL,SNR, ribo = F, filtered = NULL, repeats = 1000){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 500, p = 50, active = 20",
"n = 500, p = 100, active = 20",
"n = 500, p = 250, active = 20",
"n = 500, p = 500, active = 20")
labels  = c("n==500*`,`~p==50*`,`~`|`*beta[S]*`|`==20",
"n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20",
"n==500*`,`~p==250*`,`~`|`*beta[S]*`|`==20",
"n==500*`,`~p==500*`,`~`|`*beta[S]*`|`==20")
r = rbind(a |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[1]),
b |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[2]),
c |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[3]),
d |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[4]))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |>
mutate(Dimension = factor(Dimension, labels = labels),
SNR = factor(SNR))
return(r)
}
plotIV = function(TOT){
ggplot(TOT,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(~Dimension, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x=element_blank()) +
xlab(element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
IIIcombineN = function(a,b,c,d = NULL,SNR, ribo = F, filtered = NULL, repeats = 1000){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 100, p = 200, active = 20",
"n = 200, p = 200, active = 20",
"n = 400, p = 200, active = 20",
"n = 800, p = 200, active = 20")
labels  = c("n==100*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"n==400*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"n==800*`,`~p==200*`,`~`|`*beta[S]*`|`==20")
r = rbind(a |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[1]),
b |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[2]),
c |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[3]),
d |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[4]))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |>
mutate(Dimension = factor(Dimension, labels = labels),
SNR = factor(SNR))
return(r)
}
plotIIIn = function(TOT, active){
ggplot(TOT,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(~Dimension, labeller = label_parsed) +
geom_hline(yintercept = active, linetype = "dashed") +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x=element_blank()) +
xlab(element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
IVcombineN = function(a,b,c,d = NULL,SNR, ribo = F, filtered = NULL, repeats = 1000){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 500, p = 50, active = 20",
"n = 500, p = 100, active = 20",
"n = 500, p = 250, active = 20",
"n = 500, p = 500, active = 20")
labels  = c("n==500*`,`~p==50*`,`~`|`*beta[S]*`|`==20",
"n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20",
"n==500*`,`~p==250*`,`~`|`*beta[S]*`|`==20",
"n==500*`,`~p==500*`,`~`|`*beta[S]*`|`==20")
r = rbind(a |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[1]),
b |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[2]),
c |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[3]),
d |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR, Dimension = dimension[4]))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |>
mutate(Dimension = factor(Dimension, labels = labels),
SNR = factor(SNR))
return(r)
}
plotIVn = function(TOT, active){
ggplot(TOT,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(~Dimension, labeller = label_parsed) +
geom_hline(yintercept = active, linetype = "dashed") +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
xlab(element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
filtered = c("ATS", "Exclusion ATS",
"Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "Knockoff", "SCAD")
repeats = 1000
c11hard = combine2plots(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
load("S1hard.Rdata")
load("RData/S1hard.RData")
filtered = c("ATS", "Exclusion ATS",
"Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "Knockoff", "SCAD")
repeats = 1000
c11hard = combine2plots(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22hard = combine2plots(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 2, filtered = filtered) |> makeCluster()
c33hard = combine2plots(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 3, filtered = filtered) |> makeCluster()
S3.3hard
load("S3hardnew.RData")
load("S4hardnew.RData")
load("S2hardnew.RData")
filtered = c("ATS", "Exclusion ATS",
"Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "Knockoff", "SCAD")
repeats = 1000
c11hard = combine2plots(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22hard = combine2plots(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 2, filtered = filtered) |> makeCluster()
c33hard = combine2plots(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 3, filtered = filtered) |> makeCluster()
c44hard = combine2plots(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 4, filtered = filtered) |> makeCluster()
# save(c11hard, c22hard, c33hard, c44hard, file = "cchard.Rdata")
# load("cchard.Rdata")
c1hard = rbind(c11hard,c22hard) |> totplot2noaxis()
c2hard = rbind(c33hard,c44hard) |> totplot2()
library(patchwork)
c1hard/c2hard

rep("Shuffle 95%", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
cleanNNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("MCC" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(MCCdf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
cleanNNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("MCC" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Nhard = combine2plotsN(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Nhard = combine2plotsN(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
c44Nhard = combine2plotsN(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 4, filtered = filtered) |> makeCluster()
c1nhard = rbind(c11Nhard,c22Nhard) |> totplot2Nnoaxis(lim = 30)
c1nhard = rbind(c11Nhard,c22Nhard) |> totplot2Nnoaxis(lim = 30)
cleanNNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("MCC" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"NN" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
c1nhard = rbind(c11Nhard,c22Nhard) |> totplot2Nnoaxis(lim = 30)
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Nhard = combine2plotsN(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Nhard = combine2plotsN(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
c44Nhard = combine2plotsN(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 4, filtered = filtered) |> makeCluster()
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
cleanNNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("MCC" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"NN" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$NN = factor(Ndf$NN, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Nhard = combine2plotsN(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Nhard = combine2plotsN(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
cleanNNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("MCC" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"NN" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c11Nhard
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
combine2plotsN = function(a,b,c = NULL,d, ref,filtered = NULL, ribo = F){
if (is.null(filtered) == T){
filtered = c("ATS", "Exclusion ATS", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 10")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==10")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
if (ribo == F){
r = rbind(a |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Shuffle 95%"] = "Exclusion ATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "Exclusion ATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("10", "5", "3", "1"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}else if (ribo == T){
r = rbind(a |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1]),
b |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2]))
return(data.frame(r))
}
}
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
a = S1.10hard
b = S1.5hard
c = S1.3hard
d = S1.1hard
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 10")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==10")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
r = rbind(a |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
a |> cleanNNew()
a
cleanNNew(A)
cleanNNew(a)
x = a
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("MCC" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"NN" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
cleanNNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("NN" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Number of variables selected
c11Nhard = combine2plotsN(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Nhard = combine2plotsN(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Nhard = combine2plotsN(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
c44Nhard = combine2plotsN(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 4, filtered = filtered) |> makeCluster()
c1nhard = rbind(c11Nhard,c22Nhard) |> totplot2Nnoaxis(lim = 30)
c2nhard = rbind(c33Nhard,c44Nhard) |> totplot2N(lim = 60)
library(patchwork)
c1nhard/c2nhard
# Recall
c11Recallhard = combine2plotsRecall(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
cleanRecallNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("Recall" = c(extractRecall(z0.75),
extractRecall(z0.60),
extractRecall(z0.90),
extractRecall(ats),
extractRecall(eats),
extractRecall(lasso_1se),
extractRecall(lasso_min),
extractRecall(ko),
extractRecall(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("Shuffle 95%", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Recall
c11Recallhard = combine2plotsRecall(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
cleanRecallNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("Recall" = c(extractRecall(z0.75),
extractRecall(z0.60),
extractRecall(z0.90),
extractRecall(ats),
extractRecall(eats),
extractRecall(lasso_1se),
extractRecall(lasso_min),
extractRecall(ko),
extractRecall(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
# Recall
c11Recallhard = combine2plotsRecall(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Recallhard = combine2plotsRecall(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Recallhard = combine2plotsRecall(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
c44Recallhard = combine2plotsRecall(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 4, filtered = filtered) |> makeCluster()
cleanPrecisionNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("Precision" = c(extractPrecision(z0.75),
extractPrecision(z0.60),
extractPrecision(z0.90),
extractPrecision(ats),
extractPrecision(eats),
extractPrecision(lasso_1se),
extractPrecision(lasso_min),
extractPrecision(ko),
extractPrecision(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
#Precision
c11Precisionhard = combine2plotsPrecision(S1.10hard, S1.5hard, S1.3hard, S1.1hard, 1, filtered = filtered) |> makeCluster()
c22Precisionhard = combine2plotsPrecision(S4.10hard, S4.5hard, S4.3hard, S4.1hard, 2, filtered = filtered) |> makeCluster()
c33Precisionhard = combine2plotsPrecision(S2.10hard, S2.5hard, S2.3hard, S2.1hard, 3, filtered = filtered) |> makeCluster()
c44Precisionhard = combine2plotsPrecision(S3.10hard, S3.5hard, S3.3hard, S3.1hard, 4, filtered = filtered) |> makeCluster()
phard1 = prplot1(c11Recallhard, c11Precisionhard, c22Recallhard, c22Precisionhard)
phard2 = prplot1(c33Recallhard, c33Precisionhard, c44Recallhard, c44Precisionhard)
phard1
S1.10hard
nrow(S1.10hard)
exclusion = function(x){
x[10,] |> unlist() |> as.vector()
}
s1.10e = exclusion(S1.10hard)
s1.5e =  exclusion(S1.5hard)
s1.3e =  exclusion(S1.3hard)
s1.1e =  exclusion(S1.1hard)
s2.10e = exclusion(S2.10hard)
s2.5e =  exclusion(S2.5hard)
s2.3e =  exclusion(S2.3hard)
s2.1e =  exclusion(S2.1hard)
s3.10e =  exclusion(S3.10hard)
s3.5e =   exclusion(S3.5hard)
s3.3e =   exclusion(S3.3hard)
s3.1e =   exclusion(S3.1hard)
s4.10e = exclusion(S4.10hard)
s4.5e =  exclusion(S4.5hard)
s4.3e =  exclusion(S4.3hard)
s4.1e =  exclusion(S4.1hard)
# 1 4 2 3 for some reason
excl = data.frame("Eta" =
c(s1.10e, s1.5e, s1.3e, s1.1e,
s4.10e, s4.5e, s4.3e, s4.1e,
s2.10e, s2.5e, s2.3e, s2.1e,
s3.10e, s3.5e, s3.3e, s3.1e),
"Setting" = c(rep("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",4000),
rep("(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",4000),
rep("(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",4000),
rep("(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==10",4000)),
"SNR" = rep(c(rep(10, 1000), rep(5,1000), rep(3, 1000), rep(1,1000)), 4)
) |> mutate(SNR = factor(SNR))
ggplot(excl, aes(x = SNR, y = Eta)) + geom_boxplot(alpha = 0.65) +
facet_wrap(~Setting, labeller = label_parsed, ncol = 4) +
theme_few_grid(base_size = 20) +
ylab(TeX("Exclusion Probability Threshold $\\eta$")) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
theme(legend.position = "none")
library(latex2exp)
ggplot(excl, aes(x = SNR, y = Eta)) + geom_boxplot(alpha = 0.65) +
facet_wrap(~Setting, labeller = label_parsed, ncol = 4) +
theme_few_grid(base_size = 20) +
ylab(TeX("Exclusion Probability Threshold $\\eta$")) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
theme(legend.position = "none")
c1hard/c2hard
c1nhard/c2nhard
phard1
phard2
ggplot(excl, aes(x = SNR, y = Eta)) + geom_boxplot(alpha = 0.65) +
facet_wrap(~Setting, labeller = label_parsed, ncol = 4) +
theme_few_grid(base_size = 20) +
ylab(TeX("Exclusion Probability Threshold $\\eta$")) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
theme(legend.position = "none")
setwd("~/Library/CloudStorage/OneDrive-Personal/PhD/2024/Stability/Automatic Threshold Selection")

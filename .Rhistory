}
gendata = function(n, p, active){
# Add letters as variable names
MORELETTERS <- extend(LETTERS)
moreletters = MORELETTERS(c(1:p))
# Generate random data from multivariate gaussian with Toeplitz covariance matrix
toeshd = 0.5^abs(row(matrix(1:p, p, p)) - col(matrix(1:p, p, p)))
x = mvtnorm::rmvnorm(n  = n, sigma = toeshd)
# Randomly generate beta coefficient
beta = rep(0,p)
signs = sample(c(-1,1), active, replace = T)
coefs = sample(1:3, active, replace = T)
coefsigns = signs * coefs
beta[1:active] = sample(coefsigns, active, replace = T)
colnames(x) = moreletters
names(beta) = moreletters[1:length(beta)]
y <- x %*% beta
list("Y" = y, "X" = x, "beta" = beta)
}
### Plotting ###
makeCluster = function(c){
c$cluster = case_when(c$Method == "All" ~ "All",
c$Method %in% c("Quarter", "Quarter Excl 0.2", "Quarter Excl 0.1",
"Quarter Adaptive Excl 95%", "Quarter Adaptive Excl 99%",
"Quarter Shuffle 95%") ~ "Quarter",
c$Method %in% c("Static 0.60", "Static 0.75", "Static 0.90") ~ "Static",
c$Method %in% c("LASSO 1SE", "LASSO MIN") ~ "LASSO",
.default = as.character(c$Method))
c
}
theme_few_grid = function (base_size = 12, base_family = "")
{
gray <- "#4D4D4D"
black <- "#000000"
theme_bw(base_size = base_size, base_family = base_family) +
theme(line = element_line(colour = gray), rect = element_rect(fill = "white",
colour = NA), text = element_text(colour = black),
axis.ticks = element_line(colour = gray), legend.key = element_rect(colour = NA),
panel.border = element_rect(colour = gray), panel.grid = element_line(color = alpha("black", 0.05)),
strip.background = element_rect(fill = "#f7f9fc", colour = gray))
}
totplotnoaxis = function(TOT){
ggplot(TOT,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
# facet_wrap(~Dimension, ncol = 4) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
xlab(element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
totplot = function(TOT){
ggplot(TOT,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
# facet_wrap(~Dimension, ncol = 4) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
xlab(element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
combine = function(a,b,c,d = NULL, ref, ribo = F, filtered = NULL){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 20")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20")
SNR = c(10,5,3, 1)
SNRlabels = c("~SNR==10", "~SNR==5", "~SNR==3", "~SNR==1")
if (ribo == F){
r = rbind(a |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("10", "5", "3", "1"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}else if (ribo == T){
r = rbind(a |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1]),
b |> clean() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2]))
return(data.frame(r))
}
}
### FDR Function ###
fdr = function(X, p, beta, snr, EV, LOOPS = 1000){
n.selected = false.selections = correct.selections.prop = method = pi = c()
for (i in 1:LOOPS){
signal = sqrt(mean((as.matrix(X) %*% as.matrix(beta))^2))
sigma = as.numeric(signal/sqrt(snr))
# Compute Y with SNR
Y = as.matrix(X)%*%as.matrix(beta) + rnorm(nrow(X), 0, sd = sigma)
# Stability Selection
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
# Shuffle data
idx = sample(1:nrow(X), replace = F)
rX = X[idx,]
idxPushed = c(tail(idx, 1), head(idx, -1))
rY = Y[idxPushed] |> as.matrix(ncol = 1)
# Exclusion Probability Threshold
sMix = stabs::stabsel(x = rX, y = rY, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
sMix_prob = sort(sMix$max, decreasing = T)
mix_exclusion = quantile(sMix_prob, 0.95)
EATS =  convert(s)[1:(length(convert(s)))][convert(s)[1:(length(convert(s)))] >= 100*mix_exclusion]
if (length(EATS) == 2){EATS = c(EATS, EATS[1])}
EATSix = EATS |> getR()
pi.hat = EATS[EATSix]/100
if (pi.hat <= 0.5){
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = EV, cutoff = 0.501,
sampling.type = "MB")
}else{
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = EV, cutoff = pi.hat,
sampling.type = "MB")
}
n.selected[i] = length(s$selected)
false.selections[i] = sum(!(s$selected %in% 1:active))
correct.selections.prop[i] = sum((s$selected %in% 1:active))/active
pi[i] = pi.hat
method[i] = ifelse(pi.hat < 0.5, "CPSS", "SS")
if (i %% 10 == 0){print(i)}
}
out = data.frame(n.selected,false.selections, correct.selections.prop, method, pi, EV, snr)
}
source("Functions.R")
source("Functions.R")
filtered = c("ATS", "Exclusion ATS",
"Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "Knockoff", "SCAD")
repeats = 1000
r3.5.sub.df = r3.5.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.10.sub.df = r3.10.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r3sub = rbind(r3.5.sub.df,r3.10.sub.df)
r3sub$Method = as.character(r3sub$Method)
r3sub$Method[r3sub$Method == "LASSO 1SE"] = "LASSO"
r3sub$Method[r3sub$Method == "Exclusion ATS"] = "EATS"
r3sub$Method = factor(r3sub$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r3.5.sub.df = r3.5.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.10.sub.df = r3.10.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r3sub = rbind(r3.5.sub.df,r3.10.sub.df)
r3sub$Method
r3sub$Method |> unique()
r3.5.sub.df = r3.5.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.10.sub.df = r3.10.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r3sub = rbind(r3.5.sub.df,r3.10.sub.df)
r3sub$Method = as.character(r3sub$Method)
r3sub$Method[r3sub$Method == "LASSO 1SE"] = "LASSO"
r3sub$Method[r3sub$Method == "Exclusion ATS"] = "EATS"
r3sub$Method = factor(r3sub$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r3sub = data.frame(r3sub) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==3") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
r7.5.sub.df = r7.5.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r7.10.sub.df = r7.10.sub |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r7sub = rbind(r7.5.sub.df,r7.10.sub.df)
r7sub$Method = as.character(r3sub$Method)
r7sub$Method[r7sub$Method == "LASSO 1SE"] = "LASSO"
r7sub$Method[r7sub$Method == "Exclusion ATS"] = "EATS"
r7sub$Method = factor(r7sub$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r7sub = data.frame(r7sub) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==7") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
r3subplot = ggplot(r3sub,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
ylim(-0.32, 1) +
xlab(element_blank()) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
r7subplot = ggplot(r7sub,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
ylim(-0.32, 1) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank())+
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
r3.5.sub.df.N = r3.5.sub |> cleanNNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
cleanN = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90 =  lapply(x[3,], prep)
ATS = lapply(x[4,],prep)
EATS = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
Ndf = data.frame("NN" = c(extractN(z0.75),
extractN(z0.60),
extractN(z0.90),
extractN(ATS),
extractN(EATS),
extractN(lasso_1se),
extractN(lasso_min),
extractN(ko),
extractN(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
Ndf$Method = factor(Ndf$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
Ndf
}
r3.5.sub.df.N = r3.5.sub |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.10.sub.df.N = r3.10.sub |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r3subN = rbind(r3.5.sub.df.N,r3.10.sub.df.N)
r3subN$Method = as.character(r3subN$Method)
r3subN$Method[r3subN$Method == "LASSO 1SE"] = "LASSO"
r3subN$Method[r3subN$Method == "Exclusion ATS"] = "EATS"
r3subN$Method[r3subN$Method == "All"] = "ATS"
r3subN$Method = factor(r3subN$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r3subN = data.frame(r3subN) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==3") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
r7.5.sub.df.N = r7.5.sub |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r7.10.sub.df.N = r7.10.sub |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r7subN = rbind(r7.5.sub.df.N,r7.10.sub.df.N)
r7subN$Method = as.character(r3subN$Method)
r7subN$Method[r7subN$Method == "LASSO 1SE"] = "LASSO"
r7subN$Method[r7subN$Method == "Exclusion ATS"] = "EATS"
r7subN$Method[r7subN$Method == "All"] = "ATS"
r7subN$Method = factor(r7subN$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r7subN = data.frame(r7subN) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==7") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
r3nplot = ggplot(r3subN,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
geom_hline( aes(yintercept = 3), linetype = "dashed", linewidth = 0.5) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
coord_cartesian(ylim = c(0, 15)) +
xlab(element_blank()) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
r7nplot = ggplot(r7subN,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
coord_cartesian(ylim = c(0, 15)) +
xlab(element_blank()) +
geom_hline( aes(yintercept = 7), linetype = "dashed", linewidth = 0.5) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
library(patchwork)
r3subplot/r7subplot/r3nplot/r7nplot
# PRECISION AND RECALL
r3.5.sub.df.Precision = r3.5.sub |> cleanPrecisionNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
cleanPrecisionNew = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
P = data.frame("Precision" = c(extractPrecision(z0.75),
extractPrecision(z0.60),
extractPrecision(z0.90),
extractPrecision(ats),
extractPrecision(eats),
extractPrecision(lasso_1se),
extractPrecision(lasso_min),
extractPrecision(ko),
extractPrecision(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
P$Method = factor(P$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
P
}
cleanPrecision = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
P = data.frame("Precision" = c(extractPrecision(z0.75),
extractPrecision(z0.60),
extractPrecision(z0.90),
extractPrecision(ats),
extractPrecision(eats),
extractPrecision(lasso_1se),
extractPrecision(lasso_min),
extractPrecision(ko),
extractPrecision(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
P$Method = factor(P$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
P
}
r3.5.sub.df.Precision = r3.5.sub |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
extractPrecision = function(ql){
fp = sapply(ql, "[[", 2)
tp = sapply(ql, "[[", 1)
fn = sapply(ql, "[[", 4)
tn = sapply(ql, "[[", 3)
ans = c()
for (i in 1:length(tn)){
if ((tp[i] == 0 & fp[i] > 0) | (tp[i] == 0 & fn[i] > 0)){
ans[i] = 0
}else{
ans[i] = tp[i]/(tp[i] + fp[i])
}
}
ans
}
r3.5.sub.df.Precision = r3.5.sub |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.10.sub.df.Precision = r3.10.sub |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r3Precision = rbind(r3.5.sub.df.Precision,r3.10.sub.df.Precision)
r3Precision$Method = as.character(r3Precision$Method)
r3Precision$Method[r3Precision$Method == "LASSO 1SE"] = "LASSO"
r3Precision$Method[r3Precision$Method == "Shuffle 95%"] = "Exclusion ATS"
r3Precision$Method[r3Precision$Method == "All"] = "ATS"
r3Precision$Method = factor(r3Precision$Method, levels = c("ATS", "Exclusion ATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r3Precision = data.frame(r3Precision) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==3") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
r7.5.sub.df.Precision = r7.5.sub |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r7.10.sub.df.Precision = r7.10.sub |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r7Precision = rbind(r7.5.sub.df.Precision,r7.10.sub.df.Precision)
r7Precision$Method = as.character(r3Precision$Method)
r7Precision$Method[r7Precision$Method == "LASSO 1SE"] = "LASSO"
r7Precision$Method[r7Precision$Method == "Shuffle 95%"] = "Exclusion ATS"
r7Precision$Method[r7Precision$Method == "All"] = "ATS"
r7Precision$Method = factor(r7Precision$Method, levels = c("ATS", "Exclusion ATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r7Precision = data.frame(r7Precision) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==7") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
r3nplotprecision = ggplot(r3Precision,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_wrap(Dimension ~SNR, labeller = label_parsed, ncol = 4) +
ylab("Precision") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
r7nplotprecision = ggplot(r7Precision,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_wrap(Dimension ~SNR, labeller = label_parsed, ncol = 4) +
ylab("Precision") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
r3.5.sub.df.Recall = r3.5.sub |> cleanRecallNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
cleanRecall = function(x){
z0.75 = lapply(x[1,], prep)
z0.60 =  lapply(x[2,], prep)
z0.90=  lapply(x[3,], prep)
ats = lapply(x[4,],prep)
eats = lapply(x[5,], prep)
lasso_1se = lapply(x[6,], prep)
lasso_min = lapply(x[7,], prep)
ko = lapply(x[8,],prep)
scad = lapply(x[9,],prep)
R = data.frame("Recall" = c(extractRecall(z0.75),
extractRecall(z0.60),
extractRecall(z0.90),
extractRecall(ats),
extractRecall(eats),
extractRecall(lasso_1se),
extractRecall(lasso_min),
extractRecall(ko),
extractRecall(scad)),
"Method" = c(rep("Static 0.75", repeats),
rep("Static 0.60", repeats),
rep("Static 0.90", repeats),
rep("ATS", repeats),
rep("Exclusion ATS", repeats),
rep("LASSO 1SE", repeats),
rep("LASSO MIN", repeats),
rep("Knockoff", repeats),
rep("SCAD", repeats)))
R$Method = factor(R$Method, levels = c("ATS", "Exclusion ATS",
"Static 0.60", "Static 0.75", "Static 0.90",
"LASSO 1SE", "LASSO MIN", "Knockoff", "SCAD"))
R
}
r3.5.sub.df.Recall = r3.5.sub |> cleanRecallNew() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.5.sub.df.Recall = r3.5.sub |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.10.sub.df.Recall = r3.10.sub |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r3Recall = rbind(r3.5.sub.df.Recall,r3.10.sub.df.Recall)
r3Recall$Method = as.character(r3Recall$Method)
r3Recall$Method[r3Recall$Method == "LASSO 1SE"] = "LASSO"
r3Recall$Method[r3Recall$Method == "Shuffle 95%"] = "Exclusion ATS"
r3.5.sub.df.Recall = r3.5.sub |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
extractRecall = function(ql){
fp = sapply(ql, "[[", 2)
tp = sapply(ql, "[[", 1)
fn = sapply(ql, "[[", 4)
tn = sapply(ql, "[[", 3)
tp/(tp + fn)
}
r3.5.sub.df.Recall = r3.5.sub |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r3.10.sub.df.Recall = r3.10.sub |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r3Recall = rbind(r3.5.sub.df.Recall,r3.10.sub.df.Recall)
r3Recall$Method = as.character(r3Recall$Method)
r3Recall$Method[r3Recall$Method == "LASSO 1SE"] = "LASSO"
r3Recall$Method[r3Recall$Method == "Shuffle 95%"] = "Exclusion ATS"
r3Recall$Method[r3Recall$Method == "All"] = "ATS"
r3Recall$Method = factor(r3Recall$Method, levels = c("ATS", "Exclusion ATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r3Recall = data.frame(r3Recall) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==3") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
r7.5.sub.df.Recall = r7.5.sub |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==5")
r7.10.sub.df.Recall = r7.10.sub |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==10")
r7Recall = rbind(r7.5.sub.df.Recall,r7.10.sub.df.Recall)
r7Recall$Method = as.character(r3Recall$Method)
r7Recall$Method[r7Recall$Method == "LASSO 1SE"] = "LASSO"
r7Recall$Method[r7Recall$Method == "Shuffle 95%"] = "Exclusion ATS"
r7Recall$Method[r7Recall$Method == "All"] = "ATS"
r7Recall$Method = factor(r7Recall$Method, levels = c("ATS", "Exclusion ATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r7Recall = data.frame(r7Recall) |> mutate(Dimension = "n==71*`,`~p==20*`,`~`|`*beta[S]*`|`==7") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
pr = rbind(r7Recall, r3Recall)
pp = rbind(r7Precision, r3Precision)
prplot1 = ggplot(pr,aes(x = Method, y = Recall, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.y = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
prplot2 = ggplot(pp,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
prplot1|prplot2
library(patchwork)
